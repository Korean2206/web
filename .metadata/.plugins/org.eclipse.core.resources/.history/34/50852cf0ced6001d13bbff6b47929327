package com.poly.Servlet;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import com.poly.DAO.VideoDAO;
import com.poly.entity.Video;

/**
 * Servlet implementation class VideoManagerServlet
 */

@WebServlet({ "/video/index", "/video/create", "/video/update", "/video/delete", "/video/edit/*" })
@MultipartConfig(fileSizeThreshold=1024*1024*10, 	// 10 MB 
maxFileSize=1024*1024*50,      	// 50 MB
maxRequestSize=1024*1024*100) 
public class VideoManagerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private String getFileName(Part part) {
        String contentDisp = part.getHeader("content-disposition");
        System.out.println("content-disposition header= "+contentDisp);
        String[] tokens = contentDisp.split(";");
        for (String token : tokens) {
            if (token.trim().startsWith("filename")) {
                return token.substring(token.indexOf("=") + 2, token.length()-1);
            }
        }
        return "";
    }
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String uri = req.getRequestURI();
		VideoDAO dao = new VideoDAO();
		if (uri.contains("create")) {
			this.doCreate(req, resp);
		} else if (uri.contains("update")) {
			this.doUpdate(req, resp);
		} else if (uri.contains("delete")) {
			this.doDelete(req, resp);
		} else if (uri.contains("edit")) {
			this.doEdit(req, resp);
		}else if(uri.contains("index")){
			List<Video> list = dao.selectAll();
			// gets absolute path of the web application
	        String applicationPath = request.getServletContext().getRealPath("");
	        // constructs path of the directory to save uploaded file
	        String uploadFilePath = applicationPath + File.separator + UPLOAD_DIR;
	         
	        // creates the save directory if it does not exists
	        File fileSaveDir = new File(uploadFilePath);
	        if (!fileSaveDir.exists()) {
	            fileSaveDir.mkdirs();
	        }
	        System.out.println("Upload File Directory="+fileSaveDir.getAbsolutePath());
	        
	        String fileName = null;
	        //Get all the parts from request and write it to the file on server
	        for (Part part : req.getParts()) {
	            fileName = getFileName(part);
	            part.write(uploadFilePath + File.separator + fileName);
	        }
	 
	        req.setAttribute("message", fileName + " File uploaded successfully!");
	        req.setAttribute("videos", list);
	        getServletContext().getRequestDispatcher("/views/admin/ManageVideo.jsp").forward(
	                req, resp);
			
		}
	}

	protected void doCreate(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		

	}

	protected void doUpdate(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	
	}

	protected void doDelete(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
	
	}

	protected void doEdit(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String uri = req.getRequestURI();
		String id = uri.substring(uri.lastIndexOf("/") + 1);
		VideoDAO dao = new VideoDAO();
		Video video = dao.selectById(id);
		List<Video> list = dao.selectAll();
		req.setAttribute("videos", list);
		req.setAttribute("video", video);
		req.setAttribute("disabled", "readonly");
		req.getRequestDispatcher("/views/admin/ManageVideo.jsp").forward(req, resp);

	}
}
